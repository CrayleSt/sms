/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schoolmanagement;

import static schoolmanagement.MainMenu.options1;

/**
 *
 * @author Craylest
 */
public class Options extends javax.swing.JFrame {
public static boolean topic = true;//creating a public variable, (boolean) that stores true or false,
public static boolean hint = false; 
    /**
     * Creates new form Options
     */
    public Options() {
        initComponents();
        Update();
        
    }
    public void Update()//updates the frame according to the options, public void is used to......
    {
        JL_Header.setVisible(options1.topic);//customizes header  , sets according to the retrieved value
        JL_hint.setVisible(options1.hint);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        JCB_topic = new javax.swing.JCheckBox();
        JL_Header = new javax.swing.JLabel();
        CB_Hint = new javax.swing.JCheckBox();
        JL_hint = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        JCB_topic.setSelected(true);
        JCB_topic.setText("Show Headers");
        JCB_topic.setToolTipText("Set the visibility of the Headers");
        JCB_topic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCB_topicActionPerformed(evt);
            }
        });

        JL_Header.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        JL_Header.setText("Options");

        CB_Hint.setText("Show Hints");
        CB_Hint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_HintActionPerformed(evt);
            }
        });

        JL_hint.setForeground(new java.awt.Color(0, 153, 0));
        JL_hint.setText("Hint : Enable/Disable respective properties by choosing the repectove check boxes.");

        jLabel1.setText("Display Options :-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton1)
                        .addGap(250, 250, 250)
                        .addComponent(JL_Header))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(JCB_topic))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(CB_Hint)))
                .addGap(416, 416, 416))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(JL_hint)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(JL_Header)))
                .addGap(98, 98, 98)
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addComponent(JCB_topic)
                .addGap(0, 0, 0)
                .addComponent(CB_Hint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 239, Short.MAX_VALUE)
                .addComponent(JL_hint)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Schoolmanagement.main1.Update();//updates mainmenu
        MainMenu.infra1.Update();//update
        MainMenu.students1.Update();//update
        MainMenu.complaints1.Update();//update
        MainMenu.suggestions1.Update();//update
        Schoolmanagement.main1.setVisible(true);// navigating back
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void JCB_topicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCB_topicActionPerformed
        // TODO add your handling code here:
        if(JCB_topic.isSelected()==true)// seting the current frame's header visibility, this is for instant reaction
       {
           JL_Header.setVisible(true);
       }
       else
       {
           JL_Header.setVisible(false);
       }
       if(JCB_topic.isSelected()==true)// asigning the value to public variable topic, as per the user's interaction
       {
           topic = true;
       }
       else
       {
           topic = false;
       }
    }//GEN-LAST:event_JCB_topicActionPerformed

    private void CB_HintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_HintActionPerformed
        // TODO add your handling code here:
        if(CB_Hint.isSelected()==true)
        {
            JL_hint.setVisible(true);
        }
        else
        {
            JL_hint.setVisible(false);
        }
        if(CB_Hint.isSelected()==true)
        {
            hint = true;
        }
        else
        {
            hint = false;
        }
    }//GEN-LAST:event_CB_HintActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CB_Hint;
    private javax.swing.JCheckBox JCB_topic;
    private javax.swing.JLabel JL_Header;
    private javax.swing.JLabel JL_hint;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
